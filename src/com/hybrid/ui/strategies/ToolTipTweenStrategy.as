package com.hybrid.ui.strategies{	import flash.display.DisplayObject;	import flash.events.EventDispatcher;	import fl.transitions.Tween;	import fl.transitions.easing.*;	import fl.transitions.TweenEvent;		/**	 * @author Ducan Reid ©2010, http://www.hy-brid.com	 */	public class ToolTipTweenStrategy extends EventDispatcher implements IToolTipTweenStrategy	{				/**		 *		 */		private var _tween:Tween;		///////////////////////////////////////////////////////////////////////////////		//								ACCESSORS		///////////////////////////////////////////////////////////////////////////////				///////////////////////////////		//-------------------------		//	onComplete		//-------------------------		private var _onComplete:Function;		private var _hasOnComplete:Boolean;		public function set onComplete(value:Function):void		{			_onComplete = value;			_hasOnComplete = Boolean(value != null);		}				public function get onComplete():Function		{			return _onComplete;		}		///////////////////////////////////////////////////////////////////////////////		//								PUBLIC METHODS		///////////////////////////////////////////////////////////////////////////////		public function animate(value:Boolean,target:DisplayObject):void		{			var end:int = value == true ? 1 : 0;			if(_tween)			{				_tween.removeEventListener(TweenEvent.MOTION_FINISH,handleCompleteEvent);			}						_tween = new Tween( target, "alpha", Strong.easeOut, target.alpha, end, .5, true );						if( ! value )			{				_tween.addEventListener( TweenEvent.MOTION_FINISH, handleCompleteEvent, false, 0, true );			}		}				///////////////////////////////////////////////////////////////////////////////		//								HANDLERS		///////////////////////////////////////////////////////////////////////////////		protected function handleCompleteEvent(event:TweenEvent):void		{			if(_hasOnComplete) onComplete();		}	}}